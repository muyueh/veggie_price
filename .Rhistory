mfit =  lm( r_middle_price ~ . + factor(onlyMonth(dt)), data = nm[, -c(41)]) # remove all null
summary(mfit)
onlyMonth = function(date){
return (format(as.yearmon(date), "%m"));
}
onlyWeek = function(date){
return (weekdays(date))
}
neglectSingle = function(n){
return (floor(n / 10) * 10)
}
mfit =  lm( r_middle_price ~ . + factor(onlyMonth(dt)), data = nm[, -c(41)]) # remove all null
summary(mfit)
Data = read.table("./data/SSE青蔥.tsv", header=T, sep="\t")
PData = transform(Data,
date = as.Date(as.Date(date, "%Y年%m月%d") + years(1911))
)
### filtering out based on datatype
PData = PData[is.na(as.numeric(as.character(PData[, "mktname"]))), ]
PData = PData[is.na(as.numeric(as.character(PData[, "sbtype"]))), ]
PData = PData[is.na(as.numeric(as.character(PData[, "transformation"]))), ]
PData = PData[!is.na(as.numeric(as.character(PData[, "middleprice"]))), ]
PData = PData[!is.na(as.numeric(as.character(PData[, "quantity"]))), ]
PData = transform(PData,
middleprice = as.numeric(as.character(middleprice)),
quantity = as.numeric(as.character(quantity))
)
### to update new levels
PData$mktname = factor(PData$mktname)
PData$sbtype = factor(PData$sbtype)
PData$transformation = factor(PData$transformation)
m = merge(accuAllWeather, PData, by.x = "dt", by.y = "date")
m = m[!is.na(m$dt), ] # remove na on dt
nm = transform(m,
r_middle_price = neglectSingle(middleprice)
)
mfit =  lm( r_middle_price ~ . + factor(onlyMonth(dt)), data = nm[, -c(41)]) # remove all null
summary(mfit)
View(nm)
View(PData)
Data = read.table("./data/SSE青蔥.tsv", header=T, sep="\t")
PData = transform(Data,
date = as.Date(as.Date(date, "%Y年%m月%d") + years(1911))
)
### filtering out based on datatype
PData = PData[is.na(as.numeric(as.character(PData[, "mktname"]))), ]
PData = PData[is.na(as.numeric(as.character(PData[, "sbtype"]))), ]
PData = PData[is.na(as.numeric(as.character(PData[, "transformation"]))), ]
PData = PData[!is.na(as.numeric(as.character(PData[, "middleprice"]))), ]
PData = PData[!is.na(as.numeric(as.character(PData[, "quantity"]))), ]
PData = transform(PData,
middleprice = as.numeric(as.character(middleprice)),
quantity = as.numeric(as.character(quantity))
)
### to update new levels
PData$mktname = factor(PData$mktname)
PData$sbtype = factor(PData$sbtype)
PData$transformation = factor(PData$transformation)
setwd("/Library/WebServer/Documents/TestingDataV/30/veggie_price")
Data = read.table("./data/SSE青蔥.tsv", header=T, sep="\t")
PData = transform(Data,
date = as.Date(as.Date(date, "%Y年%m月%d") + years(1911))
)
### filtering out based on datatype
PData = PData[is.na(as.numeric(as.character(PData[, "mktname"]))), ]
PData = PData[is.na(as.numeric(as.character(PData[, "sbtype"]))), ]
PData = PData[is.na(as.numeric(as.character(PData[, "transformation"]))), ]
PData = PData[!is.na(as.numeric(as.character(PData[, "middleprice"]))), ]
PData = PData[!is.na(as.numeric(as.character(PData[, "quantity"]))), ]
PData = transform(PData,
middleprice = as.numeric(as.character(middleprice)),
quantity = as.numeric(as.character(quantity))
)
### to update new levels
PData$mktname = factor(PData$mktname)
PData$sbtype = factor(PData$sbtype)
PData$transformation = factor(PData$transformation)
# levels(PData$mktname)
# View(PData)
# fit =  lm(middleprice ~ factor(onlyWeek(date)) + factor(onlyMonth(date)) + date + factor(sbtype) + factor(mktname) + quantity, data = PData)
# summary(fit)
#
# fit =  lm(middleprice ~ quantity, data = PData)
# summary(fit)
# anova(fit)
# plot(fit)
m = merge(accuAllWeather, PData, by.x = "dt", by.y = "date")
m = m[!is.na(m$dt), ] # remove na on dt
nm = transform(m,
r_middle_price = neglectSingle(middleprice)
)
Data = read.table("./data/SE青蔥.tsv", header=T, sep="\t")
PData = transform(Data,
date = as.Date(as.Date(date, "%Y年%m月%d") + years(1911))
)
### filtering out based on datatype
PData = PData[is.na(as.numeric(as.character(PData[, "mktname"]))), ]
PData = PData[is.na(as.numeric(as.character(PData[, "sbtype"]))), ]
PData = PData[is.na(as.numeric(as.character(PData[, "transformation"]))), ]
PData = PData[!is.na(as.numeric(as.character(PData[, "middleprice"]))), ]
PData = PData[!is.na(as.numeric(as.character(PData[, "quantity"]))), ]
PData = transform(PData,
middleprice = as.numeric(as.character(middleprice)),
quantity = as.numeric(as.character(quantity))
)
### to update new levels
PData$mktname = factor(PData$mktname)
PData$sbtype = factor(PData$sbtype)
PData$transformation = factor(PData$transformation)
# levels(PData$mktname)
# View(PData)
# fit =  lm(middleprice ~ factor(onlyWeek(date)) + factor(onlyMonth(date)) + date + factor(sbtype) + factor(mktname) + quantity, data = PData)
# summary(fit)
#
# fit =  lm(middleprice ~ quantity, data = PData)
# summary(fit)
# anova(fit)
# plot(fit)
m = merge(accuAllWeather, PData, by.x = "dt", by.y = "date")
m = m[!is.na(m$dt), ] # remove na on dt
nm = transform(m,
r_middle_price = neglectSingle(middleprice)
)
mfit =  lm( r_middle_price ~ . + factor(onlyMonth(dt)), data = nm[, -c(41)]) # remove all null
summary(mfit)
Data = read.table("./data/LI萵苣菜.tsv", header=T, sep="\t")
PData = transform(Data,
date = as.Date(as.Date(date, "%Y年%m月%d") + years(1911))
)
### filtering out based on datatype
PData = PData[is.na(as.numeric(as.character(PData[, "mktname"]))), ]
PData = PData[is.na(as.numeric(as.character(PData[, "sbtype"]))), ]
PData = PData[is.na(as.numeric(as.character(PData[, "transformation"]))), ]
PData = PData[!is.na(as.numeric(as.character(PData[, "middleprice"]))), ]
PData = PData[!is.na(as.numeric(as.character(PData[, "quantity"]))), ]
PData = transform(PData,
middleprice = as.numeric(as.character(middleprice)),
quantity = as.numeric(as.character(quantity))
)
### to update new levels
PData$mktname = factor(PData$mktname)
PData$sbtype = factor(PData$sbtype)
PData$transformation = factor(PData$transformation)
# levels(PData$mktname)
# View(PData)
# fit =  lm(middleprice ~ factor(onlyWeek(date)) + factor(onlyMonth(date)) + date + factor(sbtype) + factor(mktname) + quantity, data = PData)
# summary(fit)
#
# fit =  lm(middleprice ~ quantity, data = PData)
# summary(fit)
# anova(fit)
# plot(fit)
m = merge(accuAllWeather, PData, by.x = "dt", by.y = "date")
m = m[!is.na(m$dt), ] # remove na on dt
nm = transform(m,
r_middle_price = neglectSingle(middleprice)
)
# length(accuAllWeather[,1])
# length(PData[,1])
# length(m[,1])
#
# View(m[is.na(m$dt), ]) #6935
# length(m[,1]) #54726
# length(m[!is.na(m$dt), ][,1])
# mfit = lm(middleprice ~ ., data = PData)
#
# mfit =  lm(temp_max ~ temp_min, data = m)
# mfit =  lm(temp ~ solar, data = m)
#
# mfit =  lm(middleprice ~ temp_max, data = m)
#
# mfit =  lm(middleprice ~ precp, data = m)
# summary(mfit)
#
# mfit =  lm(middleprice ~ precp, data = m)
# summary(mfit)
#
# mfit =  lm(middleprice ~ precp + precp_30 + precp_60 + precp_90 + precp_120 + precp_150 + precp_180, data = m)
View(nm)
mfit =  lm( r_middle_price ~ . + factor(onlyMonth(dt)), data = nm[, -c(41)]) # remove all null
summary(mfit)
Data = read.table("./data/LD青江白菜.tsv", header=T, sep="\t")
PData = transform(Data,
date = as.Date(as.Date(date, "%Y年%m月%d") + years(1911))
)
### filtering out based on datatype
PData = PData[is.na(as.numeric(as.character(PData[, "mktname"]))), ]
PData = PData[is.na(as.numeric(as.character(PData[, "sbtype"]))), ]
PData = PData[is.na(as.numeric(as.character(PData[, "transformation"]))), ]
PData = PData[!is.na(as.numeric(as.character(PData[, "middleprice"]))), ]
PData = PData[!is.na(as.numeric(as.character(PData[, "quantity"]))), ]
PData = transform(PData,
middleprice = as.numeric(as.character(middleprice)),
quantity = as.numeric(as.character(quantity))
)
### to update new levels
PData$mktname = factor(PData$mktname)
PData$sbtype = factor(PData$sbtype)
PData$transformation = factor(PData$transformation)
# levels(PData$mktname)
# View(PData)
# fit =  lm(middleprice ~ factor(onlyWeek(date)) + factor(onlyMonth(date)) + date + factor(sbtype) + factor(mktname) + quantity, data = PData)
# summary(fit)
#
# fit =  lm(middleprice ~ quantity, data = PData)
# summary(fit)
# anova(fit)
# plot(fit)
m = merge(accuAllWeather, PData, by.x = "dt", by.y = "date")
m = m[!is.na(m$dt), ] # remove na on dt
nm = transform(m,
r_middle_price = neglectSingle(middleprice)
)
# length(accuAllWeather[,1])
# length(PData[,1])
# length(m[,1])
#
# View(m[is.na(m$dt), ]) #6935
# length(m[,1]) #54726
# length(m[!is.na(m$dt), ][,1])
# mfit = lm(middleprice ~ ., data = PData)
#
# mfit =  lm(temp_max ~ temp_min, data = m)
# mfit =  lm(temp ~ solar, data = m)
#
# mfit =  lm(middleprice ~ temp_max, data = m)
#
# mfit =  lm(middleprice ~ precp, data = m)
# summary(mfit)
#
# mfit =  lm(middleprice ~ precp, data = m)
# summary(mfit)
#
# mfit =  lm(middleprice ~ precp + precp_30 + precp_60 + precp_90 + precp_120 + precp_150 + precp_180, data = m)
View(nm)
mfit =  lm( r_middle_price ~ . + factor(onlyMonth(dt)), data = nm[, -c(41)]) # remove all null
summary(mfit)
View(nm)
Data = read.table("./data/SE青蔥.tsv", header=T, sep="\t")
PData = transform(Data,
date = as.Date(as.Date(date, "%Y年%m月%d") + years(1911))
)
### filtering out based on datatype
PData = PData[is.na(as.numeric(as.character(PData[, "mktname"]))), ]
PData = PData[is.na(as.numeric(as.character(PData[, "sbtype"]))), ]
PData = PData[is.na(as.numeric(as.character(PData[, "transformation"]))), ]
PData = PData[!is.na(as.numeric(as.character(PData[, "middleprice"]))), ]
PData = PData[!is.na(as.numeric(as.character(PData[, "quantity"]))), ]
PData = transform(PData,
middleprice = as.numeric(as.character(middleprice)),
quantity = as.numeric(as.character(quantity))
)
### to update new levels
PData$mktname = factor(PData$mktname)
PData$sbtype = factor(PData$sbtype)
PData$transformation = factor(PData$transformation)
# levels(PData$mktname)
# View(PData)
# fit =  lm(middleprice ~ factor(onlyWeek(date)) + factor(onlyMonth(date)) + date + factor(sbtype) + factor(mktname) + quantity, data = PData)
# summary(fit)
#
# fit =  lm(middleprice ~ quantity, data = PData)
# summary(fit)
# anova(fit)
# plot(fit)
m = merge(accuAllWeather, PData, by.x = "dt", by.y = "date")
m = m[!is.na(m$dt), ] # remove na on dt
nm = transform(m,
r_middle_price = neglectSingle(middleprice)
)
# length(accuAllWeather[,1])
# length(PData[,1])
# length(m[,1])
#
# View(m[is.na(m$dt), ]) #6935
# length(m[,1]) #54726
# length(m[!is.na(m$dt), ][,1])
# mfit = lm(middleprice ~ ., data = PData)
#
# mfit =  lm(temp_max ~ temp_min, data = m)
# mfit =  lm(temp ~ solar, data = m)
#
# mfit =  lm(middleprice ~ temp_max, data = m)
#
# mfit =  lm(middleprice ~ precp, data = m)
# summary(mfit)
#
# mfit =  lm(middleprice ~ precp, data = m)
# summary(mfit)
#
# mfit =  lm(middleprice ~ precp + precp_30 + precp_60 + precp_90 + precp_120 + precp_150 + precp_180, data = m)
# View(nm)
mfit =  lm( r_middle_price ~ . + factor(onlyMonth(dt)), data = nm[, -c(41)]) # remove all null
summary(mfit)
View(nm)
roundTen = function(n){
return (floor(n / 10) * 10)
}
roundFive = function(n){
return (floor(n / 5) * 5)
}
nm = transform(m,
r_middle_price = roundFive(middleprice)
)
mfit =  lm( r_middle_price ~ . + factor(onlyMonth(dt)), data = nm[, -c(41)]) # remove all null
summary(mfit)
roundOne = function(n){
return (floor(n / 1) * 1)
}
roundOne(18)
roundFive(18)
roundFive(19)
roundFive(20)
roundOne = function(n){
return (floor(n / 1) * 1)
}
m = merge(accuAllWeather, PData, by.x = "dt", by.y = "date")
m = m[!is.na(m$dt), ] # remove na on dt
nm = transform(m,
r_middle_price = roundOne(middleprice)
)
mfit =  lm( r_middle_price ~ . + factor(onlyMonth(dt)), data = nm[, -c(41)]) # remove all null
summary(mfit)
View(nm)
nm[, 3]
nm[,1]
nm[,44]
nm[,42]
Data = read.table("./data/SD洋蔥.tsv", header=T, sep="\t")
PData = transform(Data,
date = as.Date(as.Date(date, "%Y年%m月%d") + years(1911))
)
### filtering out based on datatype
PData = PData[is.na(as.numeric(as.character(PData[, "mktname"]))), ]
PData = PData[is.na(as.numeric(as.character(PData[, "sbtype"]))), ]
PData = PData[is.na(as.numeric(as.character(PData[, "transformation"]))), ]
PData = PData[!is.na(as.numeric(as.character(PData[, "middleprice"]))), ]
PData = PData[!is.na(as.numeric(as.character(PData[, "quantity"]))), ]
PData = transform(PData,
middleprice = as.numeric(as.character(middleprice)),
quantity = as.numeric(as.character(quantity))
)
### to update new levels
PData$mktname = factor(PData$mktname)
PData$sbtype = factor(PData$sbtype)
PData$transformation = factor(PData$transformation)
# levels(PData$mktname)
# View(PData)
# fit =  lm(middleprice ~ factor(onlyWeek(date)) + factor(onlyMonth(date)) + date + factor(sbtype) + factor(mktname) + quantity, data = PData)
# summary(fit)
#
# fit =  lm(middleprice ~ quantity, data = PData)
# summary(fit)
# anova(fit)
# plot(fit)
m = merge(accuAllWeather, PData, by.x = "dt", by.y = "date")
m = m[!is.na(m$dt), ] # remove na on dt
nm = transform(m,
r_middle_price = roundOne(middleprice)
)
# View(nm)
# length(accuAllWeather[,1])
# length(PData[,1])
# length(m[,1])
#
# View(m[is.na(m$dt), ]) #6935
# length(m[,1]) #54726
# length(m[!is.na(m$dt), ][,1])
# mfit = lm(middleprice ~ ., data = PData)
#
# mfit =  lm(temp_max ~ temp_min, data = m)
# mfit =  lm(temp ~ solar, data = m)
#
# mfit =  lm(middleprice ~ temp_max, data = m)
#
# mfit =  lm(middleprice ~ precp, data = m)
# summary(mfit)
#
# mfit =  lm(middleprice ~ precp, data = m)
# summary(mfit)
#
# mfit =  lm(middleprice ~ precp + precp_30 + precp_60 + precp_90 + precp_120 + precp_150 + precp_180, data = m)
# View(nm)
mfit =  lm( r_middle_price ~ . + factor(onlyMonth(dt)), data = nm[, -c(41)]) # remove all null
summary(mfit)
nm[, -c(41)]
View(nm[, -c(41)])
View(nm[, -c("middleprice")])
View(nm[, -c(middleprice)])
subset(nm, select= -c(middleprice, transformation))
View(subset(nm, select= -c(middleprice, transformation)))
m = merge(accuAllWeather, PData, by.x = "dt", by.y = "date")
m = m[!is.na(m$dt), ] # remove na on dt
nm = transform(m,
r_middle_price_1 = roundOne(middleprice)
r_middle_price_5 = roundFive(middleprice)
r_middle_price_10 = roundTen(middleprice)
)
nm = transform(m,
r_middle_price_1 = roundOne(middleprice),
r_middle_price_5 = roundFive(middleprice),
r_middle_price_10 = roundTen(middleprice)
)
mfit =  lm( r_middle_price_1 ~ . + factor(onlyMonth(dt)), data = subset(nm, select= -c(middleprice, transformation))]) # remove all null
summary(mfit)
nm = transform(m,
r_middle_price_1 = roundOne(middleprice)
#               r_middle_price_5 = roundFive(middleprice),
#               r_middle_price_10 = roundTen(middleprice)
)
mfit =  lm( r_middle_price_1 ~ . + factor(onlyMonth(dt)), data = subset(nm, select= -c(middleprice, transformation))]) # remove all null
summary(mfit)
View(subset(nm, select= -c(middleprice, transformation))])
View(subset(nm, select= -c(middleprice, transformation)))
mfit =  lm( r_middle_price_1 ~ . + factor(onlyMonth(dt)), data = subset(nm, select= -c(middleprice, transformation))]) # remove all null
summary(mfit)
a = subset(nm, select= -c(middleprice, transformation))
View(a)
mfit =  lm( r_middle_price_1 ~ . + factor(onlyMonth(dt)), data = a]) # remove all null
summary(mfit)
mfit =  lm( r_middle_price_1 ~ . + factor(onlyMonth(dt)), data = subset(nm, select= -c(middleprice, transformation))) # remove all null
summary(mfit)
mfit =  lm( r_middle_price_5 ~ . + factor(onlyMonth(dt)), data = subset(nm, select= -c(middleprice, transformation))) # remove all null
summary(mfit)
mfit =  lm( r_middle_price_10 ~ . + factor(onlyMonth(dt)), data = subset(nm, select= -c(middleprice, transformation))) # remove all null
summary(mfit)
mfit =  lm( middleprice ~ . + factor(onlyMonth(dt)), data = subset(nm, select= -c(transformation))) # remove all null
summary(mfit)
mfit =  lm( r_middle_price_1 ~ . + factor(onlyMonth(dt)), data = subset(nm, select= -c(r_middle_price_5, r_middle_price_10, middleprice, transformation))) # remove all null
summary(mfit)
mfit =  lm(middleprice ~ . + factor(onlyMonth(dt)), data = subset(m, select= -c(transformation))) # remove all null
summary(mfit)
mfit =  lm( r_middle_price_1 ~ . + factor(onlyMonth(dt)), data = subset(nm, select= -c(middleprice, transformation))) # remove all null
summary(mfit)
nm = transform(m,
#               r_middle_price_1 = roundOne(middleprice)
#               r_middle_price_5 = roundFive(middleprice),
r_middle_price_10 = roundTen(middleprice)
)
mfit =  lm( r_middle_price_10 ~ . + factor(onlyMonth(dt)), data = subset(nm, select= -c(middleprice, transformation))) # remove all null
summary(mfit)
View(m[m$middileprice > 300, ])
View(m[m$middileprice > 100, ])
View(m[m$middileprice > 30, ])
View(m)
View(m[m$middileprice > 20, ])
View(m[m$middileprice > 15, ])
View(m[m$middileprice > 10, ])
View(m[m$middleprice > 30, ])
colmean(m[m$middleprice > 30, ][, 1])
colMeans(m[m$middleprice > 30, ][, 1])
colMeans(m[m$middleprice > 30, ])
colMeans(m)
View(colMeans(accuAllWeather))
View(colMeans(subset(accuAllWeather, select= -c(dt))))
View(colMeans(subset(accuAllWeather, select= -c(dt)), na.rm = T))
col_w = colMeans(subset(accuAllWeather, select= -c(dt)), na.rm = T)
View(col_w)
library(ggplot2)
ggplot(accuAllWeather, (aes(NULL, NULL, x=dt, y=precp))) + geom_point()
ggplot(accuAllWeather, (aes(NULL, NULL, x=dt, y=evap))) + geom_point()
ggplot(accuAllWeather, (aes(NULL, NULL, x=dt, y=evap_150))) + geom_point()
ggplot(accuAllWeather, (aes(NULL, NULL, x=dt, y=evap_180))) + geom_point()
ggplot(m, (aes(NULL, NULL, x=quantity, y = precp_30))) + geom_point()
ggplot(m, (aes(NULL, NULL, x=date, y = middleprice))) + geom_point()
ggplot(m, (aes(NULL, NULL, x=dt, y = middleprice))) + geom_point()
sm = m[m$middleprice < 300, ]
ggplot(sm, (aes(NULL, NULL, x=dt, y = middleprice))) + geom_point()
ggplot(accuAllWeather, (aes(NULL, NULL, x=dt, y=evap_150))) + geom_point()
ggplot(sm, (aes(NULL, NULL, x=dt, y = middleprice))) + geom_point()
ggplot(sm, (aes(NULL, NULL, x=dt, y = quantity))) + geom_point()
sm = m[m$evap_180 < 500, ]
ggplot(sm, (aes(NULL, NULL, x=dt, y = quantity))) + geom_point()
sm = m[m$evap_180 < 400, ]
sm = m[m$evap_180 < 400, ]
ggplot(sm, (aes(NULL, NULL, x=dt, y = quantity))) + geom_point()
sm = m[m$evap_180 < 200, ]
ggplot(sm, (aes(NULL, NULL, x=dt, y = quantity))) + geom_point()
sm = m[m$evap_180 < 200, ]
ggplot(sm, (aes(NULL, NULL, x=dt, y = middleprice))) + geom_point()
sm = m
ggplot(sm, (aes(NULL, NULL, x=dt, y = middleprice))) + geom_point()
sm = m[m$middleprice < 200, ]
ggplot(sm, (aes(NULL, NULL, x=dt, y = middleprice))) + geom_point()
ggplot(accuAllWeather, (aes(NULL, NULL, x=dt, y=temp))) + geom_point()
ggplot(accuAllWeather, (aes(NULL, NULL, x=temp, y=middleprice))) + geom_point()
ggplot(m, (aes(NULL, NULL, x=temp, y=middleprice))) + geom_point()
sm = m[m$middleprice < 300, ]
ggplot(sm, (aes(NULL, NULL, x=temp, y=middleprice))) + geom_point()
ggplot(sm, (aes(NULL, NULL, x=temp, y=middleprice))) + geom_point(alpha=0.5)
ggplot(sm, (aes(NULL, NULL, x=temp, y=middleprice))) + geom_point(alpha=0.2)
ggplot(sm, (aes(NULL, NULL, x=temp, y=quantity))) + geom_point(alpha=0.2)
ggplot(sm, (aes(NULL, NULL, x=temp_150, y=quantity))) + geom_point(alpha=0.2)
ggplot(sm, (aes(NULL, NULL, x=temp_180, y=quantity))) + geom_point(alpha=0.2)
ggplot(sm, (aes(NULL, NULL, x=temp_diff_180, y=quantity))) + geom_point(alpha=0.2)
ggplot(sm, (aes(NULL, NULL, x=solar_180, y=quantity))) + geom_point(alpha=0.2)
ggplot(sm, (aes(NULL, NULL, x=solar_180, y=precp_60))) + geom_point(alpha=0.2)
ggplot(sm, (aes(NULL, NULL, x=precp_60, y=middleprice))) + geom_point(alpha=0.2)
sm = m[m$precp < 300, ]
sm = m[m$precp > 500, ]
View(sm)
sm = m[m$precp >2500, ]
View(sm)
sm = m[m$precp >200, ]
View(sm)
ggplot(sm, (aes(NULL, NULL, x=dt, y = middleprice))) + geom_point()
sm = m
ggplot(sm, (aes(NULL, NULL, x=dt, y = middleprice))) + geom_point()
sm = m[m$middleprice < 200, ]
ggplot(sm, (aes(NULL, NULL, x=dt, y = middleprice))) + geom_point()
mfit =  lm(middleprice ~ . + factor(onlyMonth(dt)), data = subset(m, select= -c(transformation))) # remove all null
summary(mfit)
